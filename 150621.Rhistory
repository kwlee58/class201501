R > graunt<-data.frame(x=c(0,6,16,26,36,46,56,66,76),lx=c(100,64,40,25,16,10,6,3,1))
R > graunt
x  lx
1  0 100
2  6  64
3 16  40
4 26  25
5 36  16
6 46  10
7 56   6
8 66   3
9 76   1
R > plot(graunt$x,graunt$lx,xlab="",ylab="")
R > plot(graunt$x,graunt$lx,xlab="",ylab="",type="l")
R > abline(v=c(0,76),lty=2)
R > x
[1] 100000  99709  99678  99656  99639  99626  99614  99602  99590  99580  99570  99561  99552  99542  99531  99517  99498
[18]  99475  99449  99420  99389  99356  99320  99282  99240  99196  99149  99101  99051  98998  98943  98883  98819  98750
[35]  98678  98604  98526  98443  98355  98260  98158  98048  97927  97793  97644  97478  97296  97099  96887  96658  96409
[52]  96139  95847  95534  95199  94840  94458  94054  93627  93171  92679  92146  91570  90944  90270  89548  88779  87957
[69]  87055  86044  84900  83620  82209  80666  78975  77106  75043  72789  70338  67683  64812  61712  58388  54869  51173
[86]  47304  43310  39239  35147  31094  27142  23353  19783  16483  13492  10837   8534   6580   4963   3658   2632
R > graunt.x<-c(graunt$x,rev(graunt$x))
R > graunt.y<-c(graunt$x,rev(graunt$lx))
R > polygon(graunt.x,graunt.y,density=15)
R > qraunt.x
에러: 객체 'qraunt.x'를 찾을 수 없습니다
R > graunt.x
[1]  0  6 16 26 36 46 56 66 76 76 66 56 46 36 26 16  6  0
R > graunt.y
[1]   0   6  16  26  36  46  56  66  76   1   3   6  10  16  25  40  64 100
R > graunt.y<-c(rep(0,length(graunt$x)),rev(graunt$lx))
R > plot(graunt$x,graunt$lx,xlab="",ylab="",type="l")
R > abline(v=c(0,76),lty=2)
R > polygon(graunt.x,graunt.y,density=15)
R > abline(v=graunt$x,lty=2)
R > source("graunt_e0x.r")
R > source("graunt_e0x.r",echo=TRUE)
R > x<-graunt$x
R > y<-graunt$y
R > 0.5*((y[1]+y[2])*(x[2]-x[1])+(y[2]+y[3])*(x[3]-x[2])+(y[3]+y[4])*(x[4]-x[3])+
+ (y[4]+y[5])*(x[5]-x[4])+(y[5]+y[6])*(x[6]-x[5])+(y[6]+y[7])*(x[7]- .... [TRUNCATED]
numeric(0)
R > source("graunt_e0x.r")
R > s
numeric(0)
R > x
[1]  0  6 16 26 36 46 56 66 76
R > y
NULL
R > source("graunt_e0x.r")
R > s
[1] 1817
R > ?abline
R > source("graunt_e0x.r")
R > s
[1] 1817
R > source("graunt_e0x.r")
다음에 오류가 있습니다source("graunt_e0x.r") :
graunt_e0x.r:11:1: 예기치 않은 심볼입니다
10: #}
11: s
^
R > source("graunt_e0x.r")
R > s
[1] 3634
R > source("graunt_e0x.r")
R > s
[1] 1817
R > source("graunt_e0x.r")
ftable(prop.table(UCBAdmissions, margin=2:3), row.vars=2:1)
ftable(prop.table(UCBAdmissions, margin=2:3))[1:2,]
ftable(prop.table(UCBAdmissions, margin=2:3), row.vars=2:1)[1:2,]
ftable(prop.table(UCBAdmissions, margin=2:3))
ftable(prop.table(UCBAdmissions, margin=2:3))[1:2,]
setwd("~/Dropbox/Works/Class/Statistics/R.WD/class201501/")
load("class_bfi_MI1501.rda")
ls()
source("bfi_MI1501_kr.R", echo=TRUE)
bfi
library(xlsx)
read.xlsx("BFI.xlsx", n=1)
read.xlsx("BFI.xlsx", 1)
BFI<-read.xlsx("BFI.xlsx", 1)
BFI[,"E"]
BFI[,"E1"]
dimnames(BFI)
?grep
grep("E", dimnames(BFI)[[2]])
grep("A", dimnames(BFI)[[2]])
grep("O", dimnames(BFI)[[2]])
grep("C", dimnames(BFI)[[2]])
grep("N", dimnames(BFI)[[2]])
?grep
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
options(width=132)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
detach()
detach()
search()
?data.frame
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
?matrix
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
?join
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
ls()
BFI
save(file="Class_BFI_MI_1501.rda", list=ls())
savehistory("Class_BFI_MI_1501.Rhistory")
install.packages("gcookbook", repos="http://crans.rstudio.com")
ls("package:stats")
library*ggplot2)
library(ggplot2)
qplot(mtcars$wt, mtcars$mpg)
quartz(dpi=72, width=7, height=7)
qplot(mtcars$wt, mtcars$mpg)
qplot(wt, mpg, data=mtcars)
ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point()
qplot(wt, mpg, data=mtcars)
pressure
qplot(temperature, pressure, data=pressure, geom="line")
qplot(temperature, pressure, data=pressure, geom="point")
ggplot(data=pressure, aes(x=temperature, y=pressure))+geom_line()+geom_point()
qplot(temperature, pressure, data=pressure, geom=c("line", "point"))
BOD
?BOD
barplot(BOD$demand)
barplot(BOD$demand, names.arg=BOD$Time))
barplot(BOD$demand, names.arg=BOD$Time)
barplot(Cylider=table(mtcars$cyl))
table(Cylinder=mtcars$cyl)
barplot(table(Cylinder=mtcars$cyl))
qplot(x=BOD$Time, y=BOD$demand, geom="bar", stat="identity")
qplot(Cylinder=mtcars$cyl)
qplot(mtcars$cyl)
qplot(factor(BOD$Time), BOD$demand, geom="bar", stat="identity")
qplot(factor(Time), demand, data=BOD, geom="bar", stat="identity")
qplot(Time=factor(Time), demand, data=BOD, geom="bar", stat="identity")
qplot(mtcars$cyl)
qplot(factor(mtcars$cyl))
qplot(mtcars$cyl, binwidth=1)
ggplot(data=BOD, aes(x=Time, y=demand))+geom_bar(stat="identity")
ggplot(data=BOD, aes(x=factor(Time), y=demand))+geom_bar(stat="identity")
qplot(factor(cyl), data=mtcars)
ggplot(mtcars, aes(x=factor(cyl)))+geom_bar()
hist(mtcars$mpg)
hist(mtcars$mpg, breaks=10)
qplot(mtcars$mpg)
qplot(mtcars$mpg, binwidth=4))
qplot(mtcars$mpg, binwidth=4)
ggplot(mtcars, aes(x=mpg))+geom_hist(binwidth=4)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=4)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=1)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=0.5)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=2)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=3)
?ToothGrowth
install.packages("gcookbook", repos="http://cran.rstudio.com")
ls("package:gcookbook")
library(gcookbook)
ls("package:gcookbook")
aapl
str(aapl)
qplot(Time, demand, data=BOD, geom="bar", stat="identity")
quartz(dpi=72, width=7,height=7)
qplot(Time, demand, data=BOD, geom="bar", stat="identity")
qplot(factor(Time), demand, data=BOD, geom="bar", stat="identity")
?str(mtcars$syl)
str(mtcars$syl)
str(mtcars$cyl)
str(factor(mtcars$cyl))
qplot(mtcars$cyl)
qplot(mtcars$cyl, binwidth=1)
qplot(mtcars$cyl, binwidth=0.5)
qplot(factor(mtcars$cyl))
?geom_bar
ggplot(mtcars, aes(x=factor(cyl)))+geom_bar()
ggplot(mtcars, aes(x=cyl))+geom_bar()
hist(mtcars$mpg)
qplot(mtcars$mpg)
qplot(mpg, data=mtcars))
qplot(mpg, data=mtcars)
qplot(mpg, data=mtcars, geom(binwidth=1)))
qplot(mpg, data=mtcars, geom(binwidth=1))
qplot(mpg, data=mtcars, binwidth=1)
qplot(mpg, data=mtcars, binwidth=2)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=4)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=2)
ggplot(mtcars, aes(x=mpg))+geom_histogram(binwidth=1)
plot(ToothGrowthth$supp, ToothGrowth$len)
plot(ToothGrowth$supp, ToothGrowth$len)
?ToothGrowth
ToothGrowth
str(ToothGrowth)
boxplot(len~supp, data=ToothGrowth)
boxplot(len~supp+dose, data=ToothGrowth)
qplot(supp, len, data=ToothGrowth, geom="boxplot")
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot() +
labs(x="", y="")
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot() +
labs(title="Tooth Growth by Supplementary Juice", x="", y="")
qplot(supp+dose, len, data=ToothGrowth, geom="boxplot")
qplot(len~supp+dose, data=ToothGrowth, geom="boxplot")
?interaction
qplot(interaction(supp, factor(dose)), len, data=ToothGrowth, geom="boxplot")
ggplot(ToothGrowth, aes(x=interaction(supp, factor(dose))))+geom_boxplot()
ggplot(ToothGrowth, aes(x=interaction(supp, factor(dose)), y=len))+geom_boxplot()
curve(x^3-5*x, from=-4, to=4)
myfun<-function(x){
1/(1+exp(-x+10))
}
curve(myfun, from=0, to-20)
curve(myfun(x), from=0, to=20)
curve(1-myfun, add=TRUE, col="red")
curve(1-myfun(x), add=TRUE, col="red")
qplot(c(0, 20), fun=myfun, stat="function", geom="line")
ggplot(data.frame(x=c(0,20)), aes(x=x))+stat_function(fun=myfun, geom="line")
data.frame(x=c(0,20))
?stat_function
search()
pg_mean
ggplot(pg_mean, aes(x=group, y=weight))+geom_bar(stat="identity")
barplot(weight, names.args=group, data=pg_mean)
barplot(pg_mean$weight, names.args=pg_mean$group)
?barplot
barplot(pg_mean$weight, names.arg=pg_mean$group)
barplot(pg_mean$weight)
ggplot(pg_mean, aes(x=group, y=weight))+geom_bar(stat="identity")
ggplot(pg_mean, aes(x=group, y=weight))+geom_bar(stat="identity") +
labs(x="", y="")
ggplot(BOD, aes(x=Time, y=demand))+geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand))+geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand))+geom_bar(stat="identity", fill="lightblue", colour="black"))
ggplot(BOD, aes(x=factor(Time), y=demand))+geom_bar(stat="identity", fill="lightblue", colour="black")
cabbage_exp
str(cabbage_exp)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+
geom_bar(position="dodge", stat="idntity")
geom_bar(position="dodge", stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+
geom_bar(position="dodge", stat="identity")
ls()
myfun
str(myfun)
qplot(c(0,20), fun=myfun, stat="function", geom="line")
quartz(dpi=72, width=7,height=7)
pg_mean
ggplot(pg_mean, aes(x=group, y=weight)) + 
geom_bar(stat="identity", fill="lightblue", colour="black")
ls("package:gcookbook")
help(package="gcookbook")
cabbage_exp
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar) +
geom_bar()
)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar()
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge", stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="stack", stat="identity")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="stack", stat="identity") +
scale_fill_brewer(palette="Pastel1")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
scale_fill_brewer(palette="Pastel1")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="stack", stat="identity") +
scale_fill_brewer(palette="Pastel2")
hist(diamonds$cut)
hist(table(diamonds$cut))
table(diamonds$cut)
barplot(table(diamonds$cut))
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin") + scale_x_brewer(fill="white")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin") + scale_fill_brewer(fill="white")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin") + scale_fill_brewer(palette="set1")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin") + scale_fill_brewer(fill="red")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin", fill="lightblue"))
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin", fill="lightblue")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin", fill="red")
ggplot(diamonds, aes(x=cut)) + geom_bar(stat="bin", fill="blue")
ggplot(diamonds, aes(x=carat)) + geom_bar fill="blue")
ggplot(diamonds, aes(x=carat)) + geom_bar(fill="blue")
ggplot(diamonds, aes(x=carat)) + geom_bar(binwidth=1, fill="blue")
ggplot(diamonds, aes(x=carat)) + geom_bar()
ggplot(diamonds, aes(x=carat)) + geom_histogram()
uspopchange
upc<-subset(uspopchange, rank(Change) > 40)
upc
uspopchange[order(uspopchange$Change, decreasing=T)),][1:10]
uspopchange[order(uspopchange$Change, decreasing=T),][1:10]
order(uspopchange$Change, decreasing=TRUE)
uspopchange[order(uspopchange$Change, decreasing=T),][1:10,]
upc.10<-uspopchange[order(uspopchange$Change, decreasing=T),][1:10,]
ggplot(upc.10, aes(x=Abb, y=Change, fill=Region)) + geom_bar(stat="identity")
upc.10[order(upc.10$Abb), ]
reorder(Abb, Change)
reorder(upc.10$Abb, upc.10$Change)
ls()
setwd("~/Dropbox/Works/Class/Statistics/R.WD/class201501/")
load("Class_BFI_MI1501v2.rda")
ls()
MI
MI.score[1,1]
ls()
MI.score.kr[1,1]
MI.score.kr
MI[1,2]+MI[1,10]+MI[1,18]+MI[1,26]+MI[1,34]+MI[1,42]+MI[1,50]
ls()
source("BFI_MI1501_kr_v3.R", echo=TRUE)
library(plyr)
source("BFI_MI1501_kr_v3.R", echo=TRUE)
save("Class_BFI_MI15010617.rda", list=ls())
save(file="Class_BFI_MI15010617.rda", list=ls())
ls()
source("BFI_MI1501_kr_v3.R", echo=TRUE)
ls()
savehistory("150621.Rhistory")
