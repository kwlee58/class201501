R > graunt<-data.frame(x=c(0,6,16,26,36,46,56,66,76),lx=c(100,64,40,25,16,10,6,3,1))
R > graunt
x  lx
1  0 100
2  6  64
3 16  40
4 26  25
5 36  16
6 46  10
7 56   6
8 66   3
9 76   1
R > plot(graunt$x,graunt$lx,xlab="",ylab="")
R > plot(graunt$x,graunt$lx,xlab="",ylab="",type="l")
R > abline(v=c(0,76),lty=2)
R > x
[1] 100000  99709  99678  99656  99639  99626  99614  99602  99590  99580  99570  99561  99552  99542  99531  99517  99498
[18]  99475  99449  99420  99389  99356  99320  99282  99240  99196  99149  99101  99051  98998  98943  98883  98819  98750
[35]  98678  98604  98526  98443  98355  98260  98158  98048  97927  97793  97644  97478  97296  97099  96887  96658  96409
[52]  96139  95847  95534  95199  94840  94458  94054  93627  93171  92679  92146  91570  90944  90270  89548  88779  87957
[69]  87055  86044  84900  83620  82209  80666  78975  77106  75043  72789  70338  67683  64812  61712  58388  54869  51173
[86]  47304  43310  39239  35147  31094  27142  23353  19783  16483  13492  10837   8534   6580   4963   3658   2632
R > graunt.x<-c(graunt$x,rev(graunt$x))
R > graunt.y<-c(graunt$x,rev(graunt$lx))
R > polygon(graunt.x,graunt.y,density=15)
R > qraunt.x
에러: 객체 'qraunt.x'를 찾을 수 없습니다
R > graunt.x
[1]  0  6 16 26 36 46 56 66 76 76 66 56 46 36 26 16  6  0
R > graunt.y
[1]   0   6  16  26  36  46  56  66  76   1   3   6  10  16  25  40  64 100
R > graunt.y<-c(rep(0,length(graunt$x)),rev(graunt$lx))
R > plot(graunt$x,graunt$lx,xlab="",ylab="",type="l")
R > abline(v=c(0,76),lty=2)
R > polygon(graunt.x,graunt.y,density=15)
R > abline(v=graunt$x,lty=2)
R > source("graunt_e0x.r")
R > source("graunt_e0x.r",echo=TRUE)
R > x<-graunt$x
R > y<-graunt$y
R > 0.5*((y[1]+y[2])*(x[2]-x[1])+(y[2]+y[3])*(x[3]-x[2])+(y[3]+y[4])*(x[4]-x[3])+
+ (y[4]+y[5])*(x[5]-x[4])+(y[5]+y[6])*(x[6]-x[5])+(y[6]+y[7])*(x[7]- .... [TRUNCATED]
numeric(0)
R > source("graunt_e0x.r")
R > s
numeric(0)
R > x
[1]  0  6 16 26 36 46 56 66 76
R > y
NULL
R > source("graunt_e0x.r")
R > s
[1] 1817
R > ?abline
R > source("graunt_e0x.r")
R > s
[1] 1817
R > source("graunt_e0x.r")
다음에 오류가 있습니다source("graunt_e0x.r") :
graunt_e0x.r:11:1: 예기치 않은 심볼입니다
10: #}
11: s
^
R > source("graunt_e0x.r")
R > s
[1] 3634
R > source("graunt_e0x.r")
R > s
[1] 1817
R > source("graunt_e0x.r")
ftable(prop.table(UCBAdmissions, margin=2:3), row.vars=2:1)
ftable(prop.table(UCBAdmissions, margin=2:3))[1:2,]
ftable(prop.table(UCBAdmissions, margin=2:3), row.vars=2:1)[1:2,]
ftable(prop.table(UCBAdmissions, margin=2:3))
ftable(prop.table(UCBAdmissions, margin=2:3))[1:2,]
setwd("~/Dropbox/Works/Class/Statistics/R.WD/class201501/")
load("class_bfi_MI1501.rda")
ls()
source("bfi_MI1501_kr.R", echo=TRUE)
bfi
library(xlsx)
read.xlsx("BFI.xlsx", n=1)
read.xlsx("BFI.xlsx", 1)
BFI<-read.xlsx("BFI.xlsx", 1)
BFI[,"E"]
BFI[,"E1"]
dimnames(BFI)
?grep
grep("E", dimnames(BFI)[[2]])
grep("A", dimnames(BFI)[[2]])
grep("O", dimnames(BFI)[[2]])
grep("C", dimnames(BFI)[[2]])
grep("N", dimnames(BFI)[[2]])
?grep
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
options(width=132)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
detach()
detach()
search()
?data.frame
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
?matrix
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
?join
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
source("bfi_MI1501_kr.R", echo=TRUE)
ls()
BFI
save(file="Class_BFI_MI_1501.rda", list=ls())
savehistory("Class_BFI_MI_1501.Rhistory")
setwd("~/Dropbox/Works/Class/Statistics/R.WD/class201501/")
load("BFI_MI_1501.rda")
ls()
source("bfi_MI1501_kr.R", echo=T)
library(plyr)
source("bfi_MI1501_kr.R", echo=T)
BFI.MI.full.ID
ls()
BFI
ls()
BFI.score
criteria<-function(x,a){
ifelse(x<=a[1], "하", ifelse(x<=a[2], "중하", ifelse(x<=a[3], "중상", "상")}
criteria<-function(x,a){
ifelse(x<=a[1], "하", ifelse(x<=a[2], "중하", ifelse(x<=a[3], "중상", "상")))
}
criteria(BFI.score[,1], c(4,6,8))
mapply(criteria, BFI.score[, 1:2], cbind(rep(c(4,6,8),2))
)
rep(c(4,6,8),2)
matrix(rep(c(4,6,8),2), ncol=2)
mapply(criteria, BFI.score[, 1:2], matrix(rep(c(4,6,8),2), ncol=2))
BFI.score[,1:2]
cbind(rep(c(4,6,8),2))
?mapply
mapply(criteria, list(list(BFI.score[, 1], c(4,6,8)), list(BFI.score[,2], c(4,6,8))))
list(BFI.score[,1], c(4,6,8))
criteria(BFI.score[,1], c(4,6,8))
criteria(list(BFI.score[,1], c(4,6,8)))
criteria(list(BFI.score[,2], c(4,6,8)))
criteria(BFI.score[,2], c(4,6,8))
criteria(BFI.score[,3], c(4,6,8))
criteria(BFI.score[,4], c(10,12,13))
criteria(BFI.score[,5], c(8,10,12))
criteria<-function(x,a=c(4,6,8){
criteria<-function(x,a=c(4,6,8)){
ifelse(x<=a[1], "하", ifelse(x<=a[2], "중하", ifelse(x<=a[3], "중상", "상")))
}
criteria(BFI.score[,5], c(8,10,12))
criteria(BFI.score[,1])
mapply(criteria, BFI.score, MoreArgs=list(c(4,6,8), c(4,6,8), c(4,6,8), c(10,12,13), c(8,10,12)))
mapply(criteria, BFI.score, a=list(c(4,6,8), c(4,6,8), c(4,6,8), c(10,12,13), c(8,10,12)))
BFI.level.kr
str(mapply(criteria, BFI.score, a=list(c(4,6,8), c(4,6,8), c(4,6,8), c(10,12,13), c(8,10,12))))
a<-list(c(4,6,8), c(4,6,8), c(4,6,8), c(10,12,13), c(8,10,12))
mapply(criteria, BFI.score, a=a)
BFI.level.2<-mapply(criteria, BFI.score, a=a)
?lapply
BFI.level.3<-data.frame(mapply(criteria, BFI.score, a=a))
BFI.level.3
BFI.level.2
sapply(BFI.level.2, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))
lapply(BFI.level.2, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))
sapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))
lapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))
data.frame(lapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE)))
list(rep(c(4,6,8),3))
list(c(4,6,8),c(4,6,8),c(4,6,8))
sapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))
table(BFI.level.kr[,1])
sapply(BFI.level.kr, table)
str(BFI.level.kr)
sapply(data.frame(lapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))), table)
sapply(data.frame(sapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))), table)
str(data.frame(sapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))))
str(data.frame(lapply(BFI.level.3, function(x) factor(x, levels=c("하","중하", "중상", "상"), ordered=TRUE))))
str(BFI.level.3)
?sapply
list.files()
ls()
sapply(ls(),str)
ls()
?ls
unclass(ls())
?str
list(ls())
?list
as.list(ls())
sapply(as.list(ls()), str)
lapply(as.list(ls()), str)
as.list(ls())
objects()
a
str(a)
sapply(ls(), class)
sapply(list(a,A), class)
sapply(list(a,A), str)
sapply(list(a=a,A=A), str)
lapply(list(a,A), str)
ls()
ls()[1:3]
unname(ls()[1:3])
list(a, A,A.level.kr)
A.level.kr
lapply(list(a, A,A.level.kr), str)
sapply(list(a, A,A.level.kr), str)
ls()
save(file="Class_BFI_MI1501v2.rda", list=ls())
savehistory("Class_BFI_MI1501v2.Rhistory")
